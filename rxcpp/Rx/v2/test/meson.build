tests = [
    'subscriptions/coroutine',
    'subscriptions/observer',
    'subscriptions/subscription',
    'subjects/subject',
    'sources/create',
    'sources/defer',
    'sources/empty',
    'sources/interval',
    'sources/scope',
    'sources/timer',
    'operators/all',
    'operators/any',
    'operators/amb',
    'operators/amb_variadic',
    'operators/buffer',
    'operators/combine_latest',
    'operators/concat',
    'operators/concat_map',
    'operators/contains',
    'operators/debounce',
    'operators/default_if_empty',
    'operators/delay',
    'operators/distinct',
    'operators/distinct_until_changed',
    'operators/element_at',
    'operators/exists',
    'operators/filter',
    'operators/finally',
    'operators/flat_map',
    'operators/group_by',
    'operators/ignore_elements',
    'operators/is_empty',
    'operators/lift',
    'operators/map',
    'operators/merge',
    'operators/merge_delay_error',
    'operators/observe_on',
    'operators/on_error_resume_next',
    'operators/pairwise',
    'operators/publish',
    'operators/reduce',
    'operators/repeat',
    'operators/replay',
    'operators/retry',
    'operators/sample',
    'operators/scan',
    'operators/sequence_equal',
    'operators/skip',
    'operators/skip_while',
    'operators/skip_last',
    'operators/skip_until',
    'operators/start_with',
    'operators/subscribe_on',
    'operators/switch_if_empty',
    'operators/switch_on_next',
    'operators/take',
    'operators/take_last',
    'operators/take_until',
    'operators/take_while',
    'operators/tap',
    'operators/time_interval',
    'operators/timeout',
    'operators/timestamp',
    'operators/with_latest_from',
    'operators/window',
    'operators/window_toggle',
    'operators/zip'
]

foreach test_name : tests
    test_exe = executable(
        '_'.join(test_name.split('/')),
        [test_name + '.cpp', 'test.cpp'],
        include_directories : [includes, include_directories('../../../ext/catch/single_include')],
        dependencies : [thread_dep]
    )
    test(
        '_'.join(test_name.split('/')),
        test_exe
    )
endforeach
